welcome to introduction to Scala for data scientists after completing this
lesson you should be able to describe how languages leverage that features of
a runtime such as the Java Virtual Machine discuss the value of a language
like skyline data-centric programming an outline history of Scotland where it
came from
languages can be compiled to run on the Java Virtual Machine also called the JVM
by compiling their source code down to bytecode these byte codes are an
instruction set of one by top codes are generated by these compilers which is
JBM can then execute on various platforms JVM to exist for all kinds of
different runtime such as Linux UNIX Mac OS X Windows and more
java byte code is executed by the Java Virtual Machine so long as the JVM
exists for the platform you want to run on so why scholar for data science
scholars statically typed which means it's got proving correctness prior to
deployment if you have a large job which is going to run for multiple hours you
don't want to find out halfway through that language the road in was improving
that this was a correct implementation you also get tremendous speed and
performance from running on the JVM scholar also has modularity which means
that you can build a structure of how your application should look so that you
don't have one global namespace for all classes that are involved
languages that don't have this become difficult to maintain over time as they
get larger scale is lightweight and has composable cent tax this means you have
low boilerplate and you don't have to write quite as much code to do very
simple things the syntax is very familiar to people who are used to
writing data-centric applications with other languages as well
scholars also stable yet innovative has been around for a long time but is also
been used in the enterprise for many years in vertical such as the financial
sector retail manufacturing gaming and more innovation continues to take place
with Scala where people are finding new ways to prove correctness prior to
deployment
so what does scholar bring to the table for people who want to do data science
all of the techniques and features that you used to from other data-centric
languages are also available in Scala you have centrality and dispersion
measures normalization and standardization covariance and
correlation your receiver operating characteristics also called ROC curve
feature engineering Random Forests support vector machines and more so
weird Scala come from marching orders he is the creator of Scala and he was
working on the Java compiler prior to his work on Scala he put generics in
this job to make sure that you knew when you got data out of a collection exactly
what the types of data were in 2001 he decided to create an even better
language for the JVM and in 2003 the first experimental release of scholar
was brought out to the public by 2005 Scala was compiling itself in its own
language which means we're proving that the language was correct at the time it
compiled itself and in 2011 corporate stewardship was brought to bear such
that you had somebody making sure that the language was enterprise ready at all
times
having completed this lesson you should be able to describe how languages
leverage the features of a runtime such as the Java Virtual Machine discuss the
value of a language like skyline data-centric programming an outline
history of Scotland where it came from